<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd"
	default-lazy-init="true">

	<description>Quartz的定时集群任务配置</description>

	<!-- Quartz集群Schduler -->
	<bean id="clusterQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" autowire="byName">
		<!-- quartz配置文件路径, 指向cluster配置 -->
		<property name="quartzProperties">
			<props>
				<!-- Configure Main Scheduler Properties  -->
				<prop key="org.quartz.scheduler.instanceName">ClusteredScheduler</prop>
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
				<prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
				<!-- Configure ThreadPool   -->
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">5</prop>
				<prop key="org.quartz.threadPool.threadPriority">5</prop>
				<!-- Configure JobStore -->
				<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
				<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</prop>
				<prop key="org.quartz.jobStore.misfireThreshold">600000</prop>
				<prop key="org.quartz.jobStore.useProperties">false</prop>
				<prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
				<prop key="org.quartz.jobStore.selectWithLockSQL">SELECT * FROM {0}LOCKS UPDLOCK WHERE LOCK_NAME=?</prop>
				<!-- Cluster setting -->
				<prop key="org.quartz.jobStore.isClustered">true</prop>
				<prop key="org.quartz.jobStore.clusterCheckinInterval">15000</prop>
			</props>
		</property>
		
		<!-- 自动启动任务-->
		<property name="autoStartup" value="true" />
		<!-- 启动时延期10秒开始任务 -->
		<property name="startupDelay" value="600" />
		<!-- 保存Job数据到数据库所需的数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- Job接受applicationContext的成员变量名 -->
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="transactionManager" ref="jdbcTransactionManager" />
	</bean>
	
</beans>
